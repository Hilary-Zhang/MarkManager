//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarkManager.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        int Login(string username, string password, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string username, string password, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStudents", ReplyAction="http://tempuri.org/IService/GetStudentsResponse")]
        Model.Student[] GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStudents", ReplyAction="http://tempuri.org/IService/GetStudentsResponse")]
        System.Threading.Tasks.Task<Model.Student[]> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateStudent", ReplyAction="http://tempuri.org/IService/UpdateStudentResponse")]
        int UpdateStudent(Model.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateStudent", ReplyAction="http://tempuri.org/IService/UpdateStudentResponse")]
        System.Threading.Tasks.Task<int> UpdateStudentAsync(Model.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteStudent", ReplyAction="http://tempuri.org/IService/DeleteStudentResponse")]
        int DeleteStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteStudent", ReplyAction="http://tempuri.org/IService/DeleteStudentResponse")]
        System.Threading.Tasks.Task<int> DeleteStudentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindStudent", ReplyAction="http://tempuri.org/IService/FindStudentResponse")]
        Model.Student[] FindStudent(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindStudent", ReplyAction="http://tempuri.org/IService/FindStudentResponse")]
        System.Threading.Tasks.Task<Model.Student[]> FindStudentAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStudentById", ReplyAction="http://tempuri.org/IService/GetStudentByIdResponse")]
        Model.Student GetStudentById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStudentById", ReplyAction="http://tempuri.org/IService/GetStudentByIdResponse")]
        System.Threading.Tasks.Task<Model.Student> GetStudentByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeachers", ReplyAction="http://tempuri.org/IService/GetTeachersResponse")]
        Model.Teacher[] GetTeachers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeachers", ReplyAction="http://tempuri.org/IService/GetTeachersResponse")]
        System.Threading.Tasks.Task<Model.Teacher[]> GetTeachersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateTeacher", ReplyAction="http://tempuri.org/IService/UpdateTeacherResponse")]
        int UpdateTeacher(Model.Teacher teacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateTeacher", ReplyAction="http://tempuri.org/IService/UpdateTeacherResponse")]
        System.Threading.Tasks.Task<int> UpdateTeacherAsync(Model.Teacher teacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTeacher", ReplyAction="http://tempuri.org/IService/DeleteTeacherResponse")]
        int DeleteTeacher(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTeacher", ReplyAction="http://tempuri.org/IService/DeleteTeacherResponse")]
        System.Threading.Tasks.Task<int> DeleteTeacherAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindTeacher", ReplyAction="http://tempuri.org/IService/FindTeacherResponse")]
        Model.Teacher[] FindTeacher(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindTeacher", ReplyAction="http://tempuri.org/IService/FindTeacherResponse")]
        System.Threading.Tasks.Task<Model.Teacher[]> FindTeacherAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeacherById", ReplyAction="http://tempuri.org/IService/GetTeacherByIdResponse")]
        Model.Teacher GetTeacherById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeacherById", ReplyAction="http://tempuri.org/IService/GetTeacherByIdResponse")]
        System.Threading.Tasks.Task<Model.Teacher> GetTeacherByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClazzs", ReplyAction="http://tempuri.org/IService/GetClazzsResponse")]
        Model.Clazz[] GetClazzs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClazzs", ReplyAction="http://tempuri.org/IService/GetClazzsResponse")]
        System.Threading.Tasks.Task<Model.Clazz[]> GetClazzsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClazzIdByName", ReplyAction="http://tempuri.org/IService/GetClazzIdByNameResponse")]
        int GetClazzIdByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClazzIdByName", ReplyAction="http://tempuri.org/IService/GetClazzIdByNameResponse")]
        System.Threading.Tasks.Task<int> GetClazzIdByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClazz", ReplyAction="http://tempuri.org/IService/UpdateClazzResponse")]
        int UpdateClazz(Model.Clazz clazz);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClazz", ReplyAction="http://tempuri.org/IService/UpdateClazzResponse")]
        System.Threading.Tasks.Task<int> UpdateClazzAsync(Model.Clazz clazz);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteClazz", ReplyAction="http://tempuri.org/IService/DeleteClazzResponse")]
        int DeleteClazz(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteClazz", ReplyAction="http://tempuri.org/IService/DeleteClazzResponse")]
        System.Threading.Tasks.Task<int> DeleteClazzAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClazz", ReplyAction="http://tempuri.org/IService/FindClazzResponse")]
        Model.Clazz[] FindClazz(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClazz", ReplyAction="http://tempuri.org/IService/FindClazzResponse")]
        System.Threading.Tasks.Task<Model.Clazz[]> FindClazzAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCourses", ReplyAction="http://tempuri.org/IService/GetCoursesResponse")]
        Model.Course[] GetCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCourses", ReplyAction="http://tempuri.org/IService/GetCoursesResponse")]
        System.Threading.Tasks.Task<Model.Course[]> GetCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCourseIdByName", ReplyAction="http://tempuri.org/IService/GetCourseIdByNameResponse")]
        int GetCourseIdByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCourseIdByName", ReplyAction="http://tempuri.org/IService/GetCourseIdByNameResponse")]
        System.Threading.Tasks.Task<int> GetCourseIdByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCourse", ReplyAction="http://tempuri.org/IService/UpdateCourseResponse")]
        int UpdateCourse(Model.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCourse", ReplyAction="http://tempuri.org/IService/UpdateCourseResponse")]
        System.Threading.Tasks.Task<int> UpdateCourseAsync(Model.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCourse", ReplyAction="http://tempuri.org/IService/DeleteCourseResponse")]
        int DeleteCourse(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCourse", ReplyAction="http://tempuri.org/IService/DeleteCourseResponse")]
        System.Threading.Tasks.Task<int> DeleteCourseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindCourse", ReplyAction="http://tempuri.org/IService/FindCourseResponse")]
        Model.Course[] FindCourse(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindCourse", ReplyAction="http://tempuri.org/IService/FindCourseResponse")]
        System.Threading.Tasks.Task<Model.Course[]> FindCourseAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLessons", ReplyAction="http://tempuri.org/IService/GetLessonsResponse")]
        Model.Teacher[] GetLessons(int student_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLessons", ReplyAction="http://tempuri.org/IService/GetLessonsResponse")]
        System.Threading.Tasks.Task<Model.Teacher[]> GetLessonsAsync(int student_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMarksByStudentId", ReplyAction="http://tempuri.org/IService/GetMarksByStudentIdResponse")]
        Model.Mark[] GetMarksByStudentId(int student_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMarksByStudentId", ReplyAction="http://tempuri.org/IService/GetMarksByStudentIdResponse")]
        System.Threading.Tasks.Task<Model.Mark[]> GetMarksByStudentIdAsync(int student_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMarksByTeacherId", ReplyAction="http://tempuri.org/IService/GetMarksByTeacherIdResponse")]
        Model.Mark[] GetMarksByTeacherId(int teacher_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMarksByTeacherId", ReplyAction="http://tempuri.org/IService/GetMarksByTeacherIdResponse")]
        System.Threading.Tasks.Task<Model.Mark[]> GetMarksByTeacherIdAsync(int teacher_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddMark", ReplyAction="http://tempuri.org/IService/AddMarkResponse")]
        int AddMark(int student_id, int teacher_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddMark", ReplyAction="http://tempuri.org/IService/AddMarkResponse")]
        System.Threading.Tasks.Task<int> AddMarkAsync(int student_id, int teacher_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateMark", ReplyAction="http://tempuri.org/IService/UpdateMarkResponse")]
        int UpdateMark(Model.Mark mark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateMark", ReplyAction="http://tempuri.org/IService/UpdateMarkResponse")]
        System.Threading.Tasks.Task<int> UpdateMarkAsync(Model.Mark mark);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MarkManager.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MarkManager.ServiceReference.IService>, MarkManager.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Login(string username, string password, short type) {
            return base.Channel.Login(username, password, type);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string username, string password, short type) {
            return base.Channel.LoginAsync(username, password, type);
        }
        
        public Model.Student[] GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<Model.Student[]> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public int UpdateStudent(Model.Student student) {
            return base.Channel.UpdateStudent(student);
        }
        
        public System.Threading.Tasks.Task<int> UpdateStudentAsync(Model.Student student) {
            return base.Channel.UpdateStudentAsync(student);
        }
        
        public int DeleteStudent(int id) {
            return base.Channel.DeleteStudent(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteStudentAsync(int id) {
            return base.Channel.DeleteStudentAsync(id);
        }
        
        public Model.Student[] FindStudent(string name) {
            return base.Channel.FindStudent(name);
        }
        
        public System.Threading.Tasks.Task<Model.Student[]> FindStudentAsync(string name) {
            return base.Channel.FindStudentAsync(name);
        }
        
        public Model.Student GetStudentById(int id) {
            return base.Channel.GetStudentById(id);
        }
        
        public System.Threading.Tasks.Task<Model.Student> GetStudentByIdAsync(int id) {
            return base.Channel.GetStudentByIdAsync(id);
        }
        
        public Model.Teacher[] GetTeachers() {
            return base.Channel.GetTeachers();
        }
        
        public System.Threading.Tasks.Task<Model.Teacher[]> GetTeachersAsync() {
            return base.Channel.GetTeachersAsync();
        }
        
        public int UpdateTeacher(Model.Teacher teacher) {
            return base.Channel.UpdateTeacher(teacher);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTeacherAsync(Model.Teacher teacher) {
            return base.Channel.UpdateTeacherAsync(teacher);
        }
        
        public int DeleteTeacher(int id) {
            return base.Channel.DeleteTeacher(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTeacherAsync(int id) {
            return base.Channel.DeleteTeacherAsync(id);
        }
        
        public Model.Teacher[] FindTeacher(string name) {
            return base.Channel.FindTeacher(name);
        }
        
        public System.Threading.Tasks.Task<Model.Teacher[]> FindTeacherAsync(string name) {
            return base.Channel.FindTeacherAsync(name);
        }
        
        public Model.Teacher GetTeacherById(int id) {
            return base.Channel.GetTeacherById(id);
        }
        
        public System.Threading.Tasks.Task<Model.Teacher> GetTeacherByIdAsync(int id) {
            return base.Channel.GetTeacherByIdAsync(id);
        }
        
        public Model.Clazz[] GetClazzs() {
            return base.Channel.GetClazzs();
        }
        
        public System.Threading.Tasks.Task<Model.Clazz[]> GetClazzsAsync() {
            return base.Channel.GetClazzsAsync();
        }
        
        public int GetClazzIdByName(string name) {
            return base.Channel.GetClazzIdByName(name);
        }
        
        public System.Threading.Tasks.Task<int> GetClazzIdByNameAsync(string name) {
            return base.Channel.GetClazzIdByNameAsync(name);
        }
        
        public int UpdateClazz(Model.Clazz clazz) {
            return base.Channel.UpdateClazz(clazz);
        }
        
        public System.Threading.Tasks.Task<int> UpdateClazzAsync(Model.Clazz clazz) {
            return base.Channel.UpdateClazzAsync(clazz);
        }
        
        public int DeleteClazz(int id) {
            return base.Channel.DeleteClazz(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteClazzAsync(int id) {
            return base.Channel.DeleteClazzAsync(id);
        }
        
        public Model.Clazz[] FindClazz(string name) {
            return base.Channel.FindClazz(name);
        }
        
        public System.Threading.Tasks.Task<Model.Clazz[]> FindClazzAsync(string name) {
            return base.Channel.FindClazzAsync(name);
        }
        
        public Model.Course[] GetCourses() {
            return base.Channel.GetCourses();
        }
        
        public System.Threading.Tasks.Task<Model.Course[]> GetCoursesAsync() {
            return base.Channel.GetCoursesAsync();
        }
        
        public int GetCourseIdByName(string name) {
            return base.Channel.GetCourseIdByName(name);
        }
        
        public System.Threading.Tasks.Task<int> GetCourseIdByNameAsync(string name) {
            return base.Channel.GetCourseIdByNameAsync(name);
        }
        
        public int UpdateCourse(Model.Course course) {
            return base.Channel.UpdateCourse(course);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCourseAsync(Model.Course course) {
            return base.Channel.UpdateCourseAsync(course);
        }
        
        public int DeleteCourse(int id) {
            return base.Channel.DeleteCourse(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCourseAsync(int id) {
            return base.Channel.DeleteCourseAsync(id);
        }
        
        public Model.Course[] FindCourse(string name) {
            return base.Channel.FindCourse(name);
        }
        
        public System.Threading.Tasks.Task<Model.Course[]> FindCourseAsync(string name) {
            return base.Channel.FindCourseAsync(name);
        }
        
        public Model.Teacher[] GetLessons(int student_id) {
            return base.Channel.GetLessons(student_id);
        }
        
        public System.Threading.Tasks.Task<Model.Teacher[]> GetLessonsAsync(int student_id) {
            return base.Channel.GetLessonsAsync(student_id);
        }
        
        public Model.Mark[] GetMarksByStudentId(int student_id) {
            return base.Channel.GetMarksByStudentId(student_id);
        }
        
        public System.Threading.Tasks.Task<Model.Mark[]> GetMarksByStudentIdAsync(int student_id) {
            return base.Channel.GetMarksByStudentIdAsync(student_id);
        }
        
        public Model.Mark[] GetMarksByTeacherId(int teacher_id) {
            return base.Channel.GetMarksByTeacherId(teacher_id);
        }
        
        public System.Threading.Tasks.Task<Model.Mark[]> GetMarksByTeacherIdAsync(int teacher_id) {
            return base.Channel.GetMarksByTeacherIdAsync(teacher_id);
        }
        
        public int AddMark(int student_id, int teacher_id) {
            return base.Channel.AddMark(student_id, teacher_id);
        }
        
        public System.Threading.Tasks.Task<int> AddMarkAsync(int student_id, int teacher_id) {
            return base.Channel.AddMarkAsync(student_id, teacher_id);
        }
        
        public int UpdateMark(Model.Mark mark) {
            return base.Channel.UpdateMark(mark);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMarkAsync(Model.Mark mark) {
            return base.Channel.UpdateMarkAsync(mark);
        }
    }
}
